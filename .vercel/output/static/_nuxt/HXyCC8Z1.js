import{i as h,z as m,A as g}from"#entry";const o="cfp-user-preferences",I=()=>{const r=h({countries:[],topics:[],formats:[],savedSearches:[]}),n=()=>{{const e=localStorage.getItem(o);if(e)try{r.value=JSON.parse(e)}catch(s){console.error("Failed to load preferences:",s)}}},a=()=>{localStorage.setItem(o,JSON.stringify(r.value))},u=e=>{r.value.countries=e,a()},d=e=>{r.value.topics=e,a()},v=e=>{r.value.formats=e,a()},l=(e,s)=>{const t={id:crypto.randomUUID(),name:e,filters:s,createdAt:new Date().toISOString()};return r.value.savedSearches.push(t),a(),t},i=e=>{r.value.savedSearches=r.value.savedSearches.filter(s=>s.id!==e),a()},S=(e,s,t)=>{const c=r.value.savedSearches.findIndex(p=>p.id===e);c!==-1&&(r.value.savedSearches[c]={...r.value.savedSearches[c],name:s,filters:t},a())},f=e=>r.value.countries.length>0&&e.country?r.value.countries.includes(e.country):r.value.topics.length>0&&e.topic?r.value.topics.includes(e.topic):r.value.formats.length>0&&e.format?r.value.formats.includes(e.format):!0;return m(()=>{n()}),{preferences:g(r),setCountries:u,setTopics:d,setFormats:v,addSavedSearch:l,removeSavedSearch:i,updateSavedSearch:S,matchesPreferences:f}};export{I as u};
